* READING LIST: 
	"Toward an integrated framework for declaritive and interactive spreadsheet debugging" - ./docs/01 enase - short.pdf
	"A Theory of Diagnosis from First Principles" http://cs.ru.nl/~peterl/teaching/KeR/Theorist/reiteraij87.pdf
	"QuickXPLain" - http://aaaipress.org/Papers/AAAI/2004/AAAI04-027.pdf
	"Constraint Programming" - http://ktiml.mff.cuni.cz/~bartak/constraints/
	"Choco Constraint solver" - http://www.emn.fr/z-info/choco-solver/

* svn URLs:
	Java project - https://ls13-www.cs.tu-dortmund.de/svn/exquisite-service

	Excel client - https://ls13-www.cs.tu-dortmund.de/svn/excel_exquisite/mbd/ExquisiteSolution/trunk/

* Project documentation: ./docs/Exquisite_Doc.docx

* exquisite-service class documentation: ./docs/javadoc/index.html

* Additional Exquisite project documentation can be found in the Exquisite visual studio project "ExquisiteSolution" under the Documentation folder.
  Includes use case diagrams and sequence diagram of client/server interaction.

* Package contents:
	org.exquisite 				- contains the core tests.diagnosis functionality.
	tests.* 	  				- performance tests and basic unit tests.
	org.exquisite.evaluations 	- test data for the ENASE 2013 paper mentioned at the start of this readme file.
	
* Important classes:
	org.exquisite.tests.communication.Server - Allows client programs send models to be diagnosed and to receive tests.diagnosis results.
	org.exquisite.tests.communication.protocol.ServerProtocol - Manages the conversation between client and server.
	tests.exquiste.data.ProgramFlowExample - Gives an example of setting up a tests.diagnosis engine and performing a tests.diagnosis.

* Colophon:
	Java class diagrams have been generated by ObjectAid UML Explorer for Eclipse.
	Eclipse installation instructions are available at: http://www.objectaid.com/installation



