package org.exquisite.protege.ui.view;

import org.exquisite.protege.Debugger;
import org.exquisite.protege.ui.buttons.SubmitButton;
import org.exquisite.protege.ui.buttons.StartDebuggingButton;
import org.exquisite.protege.ui.buttons.StopDebuggingButton;
import org.exquisite.protege.ui.list.QueryAxiomList;
import org.protege.editor.core.ui.list.MList;
import org.semanticweb.owlapi.model.OWLOntology;

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import java.awt.*;

/**
 * <p>
 *     A view used for stating queries to the user.
 * </p>
 * <p>
 *     The view consists of a start/restart button, stop button, a submit button and a list of axioms generated by
 *     the QueryComputation component of the debugger.
 * </p>
 *
 * @author wolfi
 */
public class QueryView extends AbstractListViewComponent {

    private StartDebuggingButton startDebuggingButton;
    private StopDebuggingButton stopDebuggingButton;
    private SubmitButton submitButton;

    private JToolBar createNewQueryToolBar() {
        JToolBar toolBar = new JToolBar();

        toolBar.setFloatable(false);

        startDebuggingButton = new StartDebuggingButton(this);
        stopDebuggingButton = new StopDebuggingButton(this);
        toolBar.add(startDebuggingButton);
        toolBar.add(stopDebuggingButton);

        toolBar.add(Box.createHorizontalGlue());

        submitButton = new SubmitButton(this);
        toolBar.add(submitButton);

        toolBar.setMaximumSize(toolBar.getPreferredSize());

        return toolBar;
    }

    @Override
    protected void initialiseOWLView() throws Exception {
        super.initialiseOWLView();
        add(createNewQueryToolBar(), BorderLayout.NORTH);
        updateView(getEditorKitHook().getActiveOntologyDebugger());
    }

    @Override
    protected MList createListForComponent() {
        return new QueryAxiomList(getOWLEditorKit(),getEditorKitHook());
    }

    @Override
    public void stateChanged(ChangeEvent e) {
        updateView((Debugger) e.getSource());
    }

    private void updateView(final Debugger debugger) {
        switch(debugger.getQuerySearchStatus()) {
            case ASKING_QUERY:
                OWLOntology ontology = getOWLEditorKit().getModelManager().getActiveOntology();
                ((QueryAxiomList)getList()).updateList(debugger, ontology);
                break;
            case IDLE:
                ((QueryAxiomList)getList()).clearList();
                break;
        }

        startDebuggingButton.updateView(debugger);
        stopDebuggingButton.updateView(debugger);
        submitButton.setEnabled(debugger.isSessionRunning() && debugger.sizeOfEntailedAndNonEntailedAxioms() > 0);
    }

}
